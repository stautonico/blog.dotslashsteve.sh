<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>./steve.sh | Blog</title><link>https://blog.dotslashsteve.sh/</link><description>Recent content on ./steve.sh | Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 03 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.dotslashsteve.sh/index.xml" rel="self" type="application/rss+xml"/><item><title>Blog Post number 2</title><link>https://blog.dotslashsteve.sh/post/blogpostnhumber2/</link><pubDate>Wed, 03 Aug 2022 00:00:00 +0000</pubDate><guid>https://blog.dotslashsteve.sh/post/blogpostnhumber2/</guid><description>This is the example org-mode file used for the Denver Emacs org-mode introduction talk. Everything in this talk should work without any custom settings or installation with a reasonably recent Emacs version.
Let&amp;rsquo;s start with a headline, this is kind of like Markdown&amp;rsquo;s # character:
This is an example headline Text can be put into the headline. You can create another headline at the same level with another * character
Another headline Nesting headlines is as easy as adding another start
Nested headline Another nested headline Deeper Another headline Deeper&amp;hellip;
Deeper&amp;hellip;.. Basic markup You can really go as deep as you want.</description></item><item><title>Blog Post name</title><link>https://blog.dotslashsteve.sh/post/blog-post-name-in-url/</link><pubDate>Mon, 18 Oct 2021 00:00:00 +0000</pubDate><guid>https://blog.dotslashsteve.sh/post/blog-post-name-in-url/</guid><description>post&amp;rsquo;s content !
def recurse(n, output): if n &amp;gt; 100: output += &amp;quot;All done!\n&amp;quot; return output else: output += f&amp;quot;Working on {n}\n&amp;quot; output = recurse(n+1, output) return output return recurse(75, &amp;quot;&amp;quot;) Working on 75 Working on 76 Working on 77 Working on 78 Working on 79 Working on 80 Working on 81 Working on 82 Working on 83 Working on 84 Working on 85 Working on 86 Working on 87 Working on 88 Working on 89 Working on 90 Working on 91 Working on 92 Working on 93 Working on 94 Working on 95 Working on 96 Working on 97 Working on 98 Working on 99 Working on 100 All done!</description></item><item><title/><link>https://blog.dotslashsteve.sh/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.dotslashsteve.sh/about/</guid><description>Hello world!</description></item></channel></rss>